### Download Libraries ###

pip install pandas-datareader
pip install matplotlib
pip install statsmodels
pip install numpy
pip install pandas
pip install scipy
pip install fredapi
fred = fa(api_key='0e29b94846b9b594c9f49de7b7296b4e')


### Import Libraries ###

import pandas as pd
import numpy as np
import datetime
from scipy import stats
import matplotlib.pyplot as plt
import statsmodels.api as sm
import statsmodels.stats.api as sms
from pandas_datareader.famafrench import get_available_datasets
import pandas_datareader.data as web
from fredapi import Fred as fa


### Download data from Fama&French database ###

start = datetime.datetime(2004,3,1)
end = datetime.datetime(2022,7,1)
df_market = web.DataReader('F-F_Research_Data_Factors','famafrench',start,end)
df_market = df_market[0]


### Levels ###

df_market['market_portfolio'] = df_market['Mkt-RF'] + df_market['RF']
market_portfolio_lvl = 1 + df_market['market_portfolio']/100 
df_market['market_portfolio_level']=market_portfolio_lvl.cumprod()*1000


### Download the Value Portfolio from Fama&French database ###

# print(get_available_datasets())
df_portfolio = web.DataReader('Portfolios_Formed_on_BE-ME','famafrench',start,end) # Value Portfolio
df_portfolio = df_portfolio[0]
df_portfolio = df_portfolio['Hi 10']

portfolio_lvl = 1 + df_portfolio/100
portfolio_lvl = portfolio_lvl.cumprod()*1000
portfolio_lvl
df_market['portfolio_level']=portfolio_lvl
df_market['portfolio_return']=df_portfolio
df_market['portfolio_return-RF']=df_portfolio - df_market['RF']


### Portfolios: Plot of Levels ###
df_market["market_portfolio_level"].plot() # Market Portfolio - Blue
df_market["portfolio_level"].plot() # Value portfolio - Orange


### Import Macro Data from FED St.Louis ###

# [1] Corporate Spread - (Default Premium)
yield_baa = fred.get_series('BAA',start,end)
yield_aaa = fred.get_series('AAA',start,end)
default_spread = yield_baa - yield_aaa

# [2] Term Premium - yield spread between the 10-year and the 2-year Treasury Bond (technically should be the 1-year)
term_premium = fred.get_series('T10Y2YM',start,end)

# [3] Short-Term Interest Rate: 1-month Treasury Bill 
treasury_bill = fred.get_series('GS1M',start,end)

# [4] Dividend Yield 
dividend_yield = web.DataReader('Portfolios_Formed_on_D-P','famafrench',start,end)
dividend_yield = dividend_yield[0]
dividend_yield = dividend_yield['Hi 10']

# Unemplyment Rate
# unemployment = fred.get_series('UNRATE',start,end)

# Deliquency Rate (Default Yield) - Problem; Quarterly frequency
# deliquency_rate = fred.get_series('DRALACBS',start,end)

treasury_bill.index = dividend_yield.index
term_premium.index = dividend_yield.index
default_spread.index = dividend_yield.index
# unemployment.index = dividend_yield.index

df_market['dividend_yield']=dividend_yield
df_market['treasury_bill']=treasury_bill
df_market['term_premium']=term_premium
df_market['default_spread']=default_spread
# df_market['unemployment']=unemployment
df_market


### Regression - Conditional CAPM ###

df_market['lag_dividend_yield'] = df_market['dividend_yield'].shift(+1)
df_market['lag_treasury_bill'] = df_market['treasury_bill'].shift(+1)
df_market['lag_term_premium'] = df_market['term_premium'].shift(+1)
df_market['lag_default_spread'] = df_market['default_spread'].shift(+1)
# df_market['lag_unemployment'] = df_market['unemployment'].shift(+1)

df_market['DEF'] = df_market['lag_default_spread'] * df_market['Mkt-RF']
df_market['DIV'] = df_market['lag_dividend_yield'] * df_market['Mkt-RF']
df_market['TERM'] = df_market['lag_term_premium'] * df_market['Mkt-RF']
df_market['TB'] = df_market['lag_treasury_bill'] * df_market['Mkt-RF']
# df_market['UN'] = df_market['lag_unemployment'] * df_market['Mkt-RF']

df_market = df_market.iloc[1:,:]

x = df_market[['Mkt-RF', 'DEF', 'DIV', 'TERM', 'TB']]
y = df_market[['portfolio_return-RF']]
x = sm.add_constant(x)
model = sm.OLS(y, x).fit()
predictions = model.predict(x)
print_model = model.summary()
print(print_model)
